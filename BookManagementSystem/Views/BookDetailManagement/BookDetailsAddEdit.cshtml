@model BookManagementSystem.Core.Models.BooksDetails
@{
    // @ViewData["Title"] = "Add Edit Book Details";
}
@*<script src="~/lib/jquery/dist/jquery.js"></script>
<script src="~/lib/jquery-validation/dist/jquery.validate.js"></script>
<script src="~/lib/jquery-validation-unobtrusive/jquery.validate.unobtrusive.js"></script>*@
<script src="~/lib/jquery/dist/jquery.js"></script>
@section Scripts
{
    <partial name="_ValidationScriptsPartial" />
}
<style>

    #BookTitle-error, #AuthorId-error, #Price-error {
        margin-left: 9rem;
        color: red
    }

    input, select {
        border: 1px solid #ccc;
        border-radius: 5px;
    }

    h3 {
        color: #d42c2c
    }
</style>

@using (Html.BeginForm("BookDetailsSaveAndUpdate", "BookDetailManagement", FormMethod.Post, new { @id = "BookDetilasForm" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.BookDetailId)
    <div class="container">
        <div class="offset-xl-3 offset-lg-3 offset-md-3">
            @if (Model != null)
            {
                <h3>Edit Book Details</h3>
            }
            else
            {
                <h3>Create Book Details</h3>
            }

            <div class="row mt-5">
                <div class="col-xl-8 col-lg-8 col-md-12 col-sm-12 col-12">
                    <div class="row mb-3">
                        <label class="col-xl-3 col-lg-3 col-sm-3 col-4">Book Name <span class="text-danger">*</span></label>
                        @Html.EditorFor(Modal => Modal.BookTitle, new { HtmlAttributes = new { @type = "text", @class = "col-xl-7 col-lg-7 col-sm-7 col-8   py-2 px-2", @placeholder = "Enter Your Book Name", @maxlength = "35" } })
                    </div>
                    <div class="row mb-3">
                        <label class="col-xl-3 col-lg-3 col-sm-3 col-4">Department <span class="text-danger">*</span></label>
                        @*<select name="AuthorId" class="col-xl-7 col-lg-7 col-sm-7 col-8 py-2 px-2"><option>Select Author</option></select>*@
                        @Html.DropDownListFor(Modal => Modal.AuthorId, (IEnumerable<SelectListItem>)ViewBag.Author, "---Select Author---", new { @class = "col-xl-7 col-lg-7 col-sm-7 col-8   py-2 px-2" })
                    </div>
                    <div class="row mb-3">
                        <label class="col-xl-3 col-lg-3 col-sm-3 col-4">Book Price <span class="text-danger">*</span></label>
                        @Html.EditorFor(Modal => Modal.Price, new { HtmlAttributes = new { @type = "number", @class = "col-xl-7 col-lg-7 col-sm-7 col-8   py-2 px-2", @placeholder = "Enter Your Book Price" } })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
            <div class="text-center mt-4">
                @if (Model != null)
                {
                    <button type="button" onclick="SubmitDetails()" class="btn btn-primary">Update</button>
                }
                else
                {
                    <button type="button" onclick="SubmitDetails()" class="btn btn-primary">Submit</button>
                }

                <button type="button" onclick="btn()" class="btn btn-default">Cancel</button>
            </div>
        </div>

    </div>
}

@if (TempData["Alert1"] != null)
{
    <script type="text/javascript">
        alert("@Html.Raw(@TempData["Alert1"].ToString())");
    </script>
}
<script>
    function SubmitDetails() {
        debugger;
        alert("Ho")
        if ($("#BookDetilasForm").valid()) {
            $("#BookDetilasForm").submit();
        }
    }


    $(function() {
        debugger;
        $("#BookDetilasForm").validate({
                rules: {
                BookTitle:
                    {
                        required: true,
                        maxlength: 35
                    },
                AuthorId:
                    {
                        required: true
                    },
                Price:
                    {
                        required: true,
                    }
                },
                messages:
                {
                    BookTitle:
                    {
                        required: "Book Name is required",
                        maxlength: "Book Name should be 35 charcter"
                    },
                    AuthorId:
                    {
                        required: "Please Select Author Name",
                    },
                    Price:
                    {
                        required: "Book Price is required",
                    }
                }
        });

    });

       function btn() {
        window.location.href = "@Url.Action("BookDetailsList", "BookDetailManagement")";
       }




</script>
